===============================
4. Text indentation
===============================
Import module:
==============
    >>> text_indentation = __import__('5-text_indentation').text_indentation

Function:
=========
function that prints a text with 2 new lines after
each of these characters: ., ? and :

Operations:
===========
 * text must be a string, otherwise raise a TypeError
   exception with the message text must be a string
 * There should be no space at the beginning or at the end of each printed line

Section // Non-Parameters
=========================
Test case #0: A test case without parameters
    >>> text_indentation()
    Traceback (most recent call last):
    TypeError: text_indentation() missing 1 required positional argument: 'text'

Test case #0: A test case without parameters
    >>> text_indentation('Monty Python')
    Monty Python

Test case #0: A test case without parameters
    >>> text_indentation('Ponty Mython?')
    Ponty Mython?
    <BLANKLINE>

Test case #0: A test case without parameters
    >>> text_indentation("Hello world. Monty Python? It's is:")
    Hello world.
    <BLANKLINE>
    Monty Python?
    <BLANKLINE>
    It's is:
    <BLANKLINE>

Test case #0: A test case without parameters
    >>> text_indentation("""Bye world. \
    ... Python Monty? \
    ... Isn't""")
    Bye world.
    <BLANKLINE>
    Python Monty?
    <BLANKLINE>
    Isn't

Test case #0: A test case without parameters
    >>> text_indentation(15)
    Traceback (most recent call last):
    TypeError: text must be a string

Test case #0: A test case without parameters
    >>> text_indentation(True)
    Traceback (most recent call last):
    TypeError: text must be a string

Test case #0: A test case without parameters
    >>> text_indentation(str)
    Traceback (most recent call last):
    TypeError: text must be a string

Test case #0: A test case without parameters
    >>> text_indentation(1e400)
    Traceback (most recent call last):
    TypeError: text must be a string

Test case #0: A test case without parameters
    >>> text_indentation("   ?:.   ")
    ?
    <BLANKLINE>
    :
    <BLANKLINE>
    .
    <BLANKLINE>

Test case #0: A test case without parameters
    >>> text_indentation("  .??:?.  ")
    .
    <BLANKLINE>
    ?
    <BLANKLINE>
    ?
    <BLANKLINE>
    :
    <BLANKLINE>
    ?
    <BLANKLINE>
    .
    <BLANKLINE>

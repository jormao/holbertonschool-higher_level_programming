===============================
2. Division of matrix module
===============================
Import module:
==============
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
Function:
=========
Write a function that divides all elements of a matrix.
Operations:
===========
 * matrix must be a list of lists of integers or floats,
   otherwise raise a TypeError exception with the message
   'matrix must be a matrix (list of lists) of integers/floats'.
 * Each row of the matrix must be of the same size, 
   otherwise raise a TypeError exception with the message
   'Each row of the matrix must have the same size'.
 * div must be a number (integer or float), 
   otherwise raise a TypeError exception with the message
   'div must be a number'.
 * div can't be equal to 0, otherwise raise a ZeroDivisionError
   exception with the message 'division by zero'.
 * All elements of the matrix should be divided by div, 
   rounded to 2 decimal places.
Section // Non-Parameters
=========================
Test case #0: A test case without parameters
    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Section // ...
==================
Test case #1: ...
    >>> matrix = [[1, 2, 3],[4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test case #1: ...
    >>> matrix = [[1.0, -2.0, -3.0],[-4.0, 5.0, -6.0]]
    >>> matrix_divided(matrix, 3.0)
    [[0.33, -0.67, -1.0], [-1.33, 1.67, -2.0]]

Test case #1: ...
    >>> matrix = [[10.0, 65, 37.0],[40, 15.0, 66]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Test case #1: ...
    >>> matrix = [[1e400, 1e500, 1e600],[1e900, 1e800, 1e700]]
    >>> matrix_divided(matrix, 3)
    [[inf, inf, inf], [inf, inf, inf]]

Test case #2: ...
    >>> matrix = 'Monty Python'
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #2: ...
    >>> matrix = [[1, 2, 3], 4, 5, 6]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #2: ...
    >>> matrix = [[[10.0], [65], [37.0]],[[40], [15.0], [66]]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #2: ...
    >>> matrix = [['1', '2', '3'], ['4', '5', '6']]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #2: ...
    >>> matrix = [['1', '2', '3'], ['4', '5', '6']]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #2: ...
    >>> matrix = [1, 2, 3, 4, 5, 6]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #2: ...
    >>> matrix = [['1', '2', '3'], ['4', '5', '6']]
    >>> matrix_divided('matrix', 10.0)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #2: ...
    >>> matrix = [[1, 2, 54.0], [24, 35.5, 6]]
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
    TypeError: div must be a number

Test case #2: ...
    >>> matrix = [[1, 2, 54.0], [24, 35.5, 6]]
    >>> matrix_divided(matrix, 'Monty Python')
    Traceback (most recent call last):
    TypeError: div must be a number

Test case #2: ...
    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Test case #2: ...
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> type(matrix_divided(matrix, 3))
    <class 'list'>

Test case #2: ...
    >>> matrix = [[1, 2, 3], [4, 5, 6], 'Monty Python']
    >>> matrix_divided('matrix', 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case # 2: ...
    >>> matrix_divided(None, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case # 2: ...
    >>> matrix_divided([[1, 1.22],[2, 5.9],["H0", 10]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case # 2: ...
    >>> matrix_divided([1, 1.22, 5], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #2: ...
    >>> matrix_divided([[1, 1.22],[2, 5.9],[10]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Test case #2: ...
    >>> matrix_divided([[1, 1.22],[2, 5.9],[0, 10]], 0.1)
    [[10.0, 12.2], [20.0, 59.0], [0.0, 100.0]]

Test case #2: ...
    >>> matrix_divided([[1, 1.22],[2, 5.9],[0, 10]])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
